// @generated by protoc-gen-es v2.2.5 with parameter "target=dts"
// @generated from file node/v1/node.proto (package node.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file node/v1/node.proto.
 */
export declare const file_node_v1_node: GenFile;

/**
 * NodeListItem represents a node with its unique identifier.
 *
 * @generated from message node.v1.NodeListItem
 */
export declare type NodeListItem = Message<"node.v1.NodeListItem"> & {
  /**
   * The unique identifier of the node.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message node.v1.NodeListItem.
 * Use `create(NodeListItemSchema)` to create a new message.
 */
export declare const NodeListItemSchema: GenMessage<NodeListItem>;

/**
 * ListNodesRequest represents the request to list nodes.
 *
 * @generated from message node.v1.ListNodesRequest
 */
export declare type ListNodesRequest = Message<"node.v1.ListNodesRequest"> & {
  /**
   * The access group to filter the nodes by.
   *
   * @generated from field: string access_group = 1;
   */
  accessGroup: string;
};

/**
 * Describes the message node.v1.ListNodesRequest.
 * Use `create(ListNodesRequestSchema)` to create a new message.
 */
export declare const ListNodesRequestSchema: GenMessage<ListNodesRequest>;

/**
 * ListNodesResponse represents the response containing the list of nodes.
 *
 * @generated from message node.v1.ListNodesResponse
 */
export declare type ListNodesResponse = Message<"node.v1.ListNodesResponse"> & {
  /**
   * The list of nodes items.
   *
   * @generated from field: repeated node.v1.NodeListItem items = 1;
   */
  items: NodeListItem[];
};

/**
 * Describes the message node.v1.ListNodesResponse.
 * Use `create(ListNodesResponseSchema)` to create a new message.
 */
export declare const ListNodesResponseSchema: GenMessage<ListNodesResponse>;

/**
 * NodeStoreService provides operations for managing nodes.
 *
 * @generated from service node.v1.NodeStoreService
 */
export declare const NodeStoreService: GenService<{
  /**
   * ListNodes retrieves a list of nodes belonging to the specified access group.
   *
   * @generated from rpc node.v1.NodeStoreService.ListNodes
   */
  listNodes: {
    methodKind: "unary";
    input: typeof ListNodesRequestSchema;
    output: typeof ListNodesResponseSchema;
  },
}>;

