// @generated by protoc-gen-es v2.2.5 with parameter "target=dts"
// @generated from file cluster/v1/cluster.proto (package cluster.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cluster/v1/cluster.proto.
 */
export declare const file_cluster_v1_cluster: GenFile;

/**
 * Represents a list item in the cluster.
 *
 * @generated from message cluster.v1.ClusterListItem
 */
export declare type ClusterListItem = Message<"cluster.v1.ClusterListItem"> & {
  /**
   * The unique identifier of the cluster.
   *
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * The name of the cluster.
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message cluster.v1.ClusterListItem.
 * Use `create(ClusterListItemSchema)` to create a new message.
 */
export declare const ClusterListItemSchema: GenMessage<ClusterListItem>;

/**
 * Request message for listing clusters.
 *
 * @generated from message cluster.v1.ListClustersRequest
 */
export declare type ListClustersRequest = Message<"cluster.v1.ListClustersRequest"> & {
};

/**
 * Describes the message cluster.v1.ListClustersRequest.
 * Use `create(ListClustersRequestSchema)` to create a new message.
 */
export declare const ListClustersRequestSchema: GenMessage<ListClustersRequest>;

/**
 * Response message containing a list of clusters.
 *
 * @generated from message cluster.v1.ListClustersResponse
 */
export declare type ListClustersResponse = Message<"cluster.v1.ListClustersResponse"> & {
  /**
   * The list of cluster items.
   *
   * @generated from field: repeated cluster.v1.ClusterListItem items = 1;
   */
  items: ClusterListItem[];
};

/**
 * Describes the message cluster.v1.ListClustersResponse.
 * Use `create(ListClustersResponseSchema)` to create a new message.
 */
export declare const ListClustersResponseSchema: GenMessage<ListClustersResponse>;

/**
 * Service for managing clusters in the store.
 *
 * @generated from service cluster.v1.ClusterStoreService
 */
export declare const ClusterStoreService: GenService<{
  /**
   * Lists all the clusters in the store.
   *
   * @generated from rpc cluster.v1.ClusterStoreService.ListCluster
   */
  listCluster: {
    methodKind: "unary";
    input: typeof ListClustersRequestSchema;
    output: typeof ListClustersResponseSchema;
  },
}>;

