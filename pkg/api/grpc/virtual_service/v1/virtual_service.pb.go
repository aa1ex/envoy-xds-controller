// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: virtual_service/v1/virtual_service.proto

package virtual_servicev1

import (
	v1 "github.com/kaasops/envoy-xds-controller/pkg/api/grpc/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVirtualServiceRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeIds     []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	ProjectId   string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TemplateUid string                 `protobuf:"bytes,4,opt,name=template_uid,json=templateUid,proto3" json:"template_uid,omitempty"`
	ListenerUid string                 `protobuf:"bytes,5,opt,name=listener_uid,json=listenerUid,proto3" json:"listener_uid,omitempty"`
	VirtualHost []byte                 `protobuf:"bytes,6,opt,name=virtual_host,json=virtualHost,proto3" json:"virtual_host,omitempty"`
	// Types that are valid to be assigned to AccessLogConfig:
	//
	//	*CreateVirtualServiceRequest_AccessLogConfigUid
	AccessLogConfig          isCreateVirtualServiceRequest_AccessLogConfig `protobuf_oneof:"access_log_config"`
	AdditionalHttpFilterUids []string                                      `protobuf:"bytes,8,rep,name=additional_http_filter_uids,json=additionalHttpFilterUids,proto3" json:"additional_http_filter_uids,omitempty"`
	AdditionalRouteUids      []string                                      `protobuf:"bytes,9,rep,name=additional_route_uids,json=additionalRouteUids,proto3" json:"additional_route_uids,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CreateVirtualServiceRequest) Reset() {
	*x = CreateVirtualServiceRequest{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualServiceRequest) ProtoMessage() {}

func (x *CreateVirtualServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVirtualServiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVirtualServiceRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *CreateVirtualServiceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateVirtualServiceRequest) GetTemplateUid() string {
	if x != nil {
		return x.TemplateUid
	}
	return ""
}

func (x *CreateVirtualServiceRequest) GetListenerUid() string {
	if x != nil {
		return x.ListenerUid
	}
	return ""
}

func (x *CreateVirtualServiceRequest) GetVirtualHost() []byte {
	if x != nil {
		return x.VirtualHost
	}
	return nil
}

func (x *CreateVirtualServiceRequest) GetAccessLogConfig() isCreateVirtualServiceRequest_AccessLogConfig {
	if x != nil {
		return x.AccessLogConfig
	}
	return nil
}

func (x *CreateVirtualServiceRequest) GetAccessLogConfigUid() string {
	if x != nil {
		if x, ok := x.AccessLogConfig.(*CreateVirtualServiceRequest_AccessLogConfigUid); ok {
			return x.AccessLogConfigUid
		}
	}
	return ""
}

func (x *CreateVirtualServiceRequest) GetAdditionalHttpFilterUids() []string {
	if x != nil {
		return x.AdditionalHttpFilterUids
	}
	return nil
}

func (x *CreateVirtualServiceRequest) GetAdditionalRouteUids() []string {
	if x != nil {
		return x.AdditionalRouteUids
	}
	return nil
}

type isCreateVirtualServiceRequest_AccessLogConfig interface {
	isCreateVirtualServiceRequest_AccessLogConfig()
}

type CreateVirtualServiceRequest_AccessLogConfigUid struct {
	AccessLogConfigUid string `protobuf:"bytes,7,opt,name=access_log_config_uid,json=accessLogConfigUid,proto3,oneof"`
}

func (*CreateVirtualServiceRequest_AccessLogConfigUid) isCreateVirtualServiceRequest_AccessLogConfig() {
}

type CreateVirtualServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVirtualServiceResponse) Reset() {
	*x = CreateVirtualServiceResponse{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVirtualServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualServiceResponse) ProtoMessage() {}

func (x *CreateVirtualServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualServiceResponse.ProtoReflect.Descriptor instead.
func (*CreateVirtualServiceResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVirtualServiceResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type UpdateVirtualServiceRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uid         string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NodeIds     []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ProjectId   string                 `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TemplateUid string                 `protobuf:"bytes,5,opt,name=template_uid,json=templateUid,proto3" json:"template_uid,omitempty"`
	ListenerUid string                 `protobuf:"bytes,6,opt,name=listener_uid,json=listenerUid,proto3" json:"listener_uid,omitempty"`
	VirtualHost []byte                 `protobuf:"bytes,7,opt,name=virtual_host,json=virtualHost,proto3" json:"virtual_host,omitempty"`
	// Types that are valid to be assigned to AccessLogConfig:
	//
	//	*UpdateVirtualServiceRequest_AccessLogConfigUid
	AccessLogConfig          isUpdateVirtualServiceRequest_AccessLogConfig `protobuf_oneof:"access_log_config"`
	AdditionalHttpFilterUids []string                                      `protobuf:"bytes,9,rep,name=additional_http_filter_uids,json=additionalHttpFilterUids,proto3" json:"additional_http_filter_uids,omitempty"`
	AdditionalRouteUids      []string                                      `protobuf:"bytes,10,rep,name=additional_route_uids,json=additionalRouteUids,proto3" json:"additional_route_uids,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpdateVirtualServiceRequest) Reset() {
	*x = UpdateVirtualServiceRequest{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualServiceRequest) ProtoMessage() {}

func (x *UpdateVirtualServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateVirtualServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *UpdateVirtualServiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetTemplateUid() string {
	if x != nil {
		return x.TemplateUid
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetListenerUid() string {
	if x != nil {
		return x.ListenerUid
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetVirtualHost() []byte {
	if x != nil {
		return x.VirtualHost
	}
	return nil
}

func (x *UpdateVirtualServiceRequest) GetAccessLogConfig() isUpdateVirtualServiceRequest_AccessLogConfig {
	if x != nil {
		return x.AccessLogConfig
	}
	return nil
}

func (x *UpdateVirtualServiceRequest) GetAccessLogConfigUid() string {
	if x != nil {
		if x, ok := x.AccessLogConfig.(*UpdateVirtualServiceRequest_AccessLogConfigUid); ok {
			return x.AccessLogConfigUid
		}
	}
	return ""
}

func (x *UpdateVirtualServiceRequest) GetAdditionalHttpFilterUids() []string {
	if x != nil {
		return x.AdditionalHttpFilterUids
	}
	return nil
}

func (x *UpdateVirtualServiceRequest) GetAdditionalRouteUids() []string {
	if x != nil {
		return x.AdditionalRouteUids
	}
	return nil
}

type isUpdateVirtualServiceRequest_AccessLogConfig interface {
	isUpdateVirtualServiceRequest_AccessLogConfig()
}

type UpdateVirtualServiceRequest_AccessLogConfigUid struct {
	AccessLogConfigUid string `protobuf:"bytes,8,opt,name=access_log_config_uid,json=accessLogConfigUid,proto3,oneof"`
}

func (*UpdateVirtualServiceRequest_AccessLogConfigUid) isUpdateVirtualServiceRequest_AccessLogConfig() {
}

type UpdateVirtualServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVirtualServiceResponse) Reset() {
	*x = UpdateVirtualServiceResponse{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVirtualServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualServiceResponse) ProtoMessage() {}

func (x *UpdateVirtualServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualServiceResponse.ProtoReflect.Descriptor instead.
func (*UpdateVirtualServiceResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{3}
}

type DeleteVirtualServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVirtualServiceRequest) Reset() {
	*x = DeleteVirtualServiceRequest{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualServiceRequest) ProtoMessage() {}

func (x *DeleteVirtualServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteVirtualServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type DeleteVirtualServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVirtualServiceResponse) Reset() {
	*x = DeleteVirtualServiceResponse{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVirtualServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualServiceResponse) ProtoMessage() {}

func (x *DeleteVirtualServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualServiceResponse.ProtoReflect.Descriptor instead.
func (*DeleteVirtualServiceResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{5}
}

type GetVirtualServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVirtualServiceRequest) Reset() {
	*x = GetVirtualServiceRequest{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualServiceRequest) ProtoMessage() {}

func (x *GetVirtualServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualServiceRequest.ProtoReflect.Descriptor instead.
func (*GetVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetVirtualServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetVirtualServiceResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Uid         string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectId   string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Template    *v1.ResourceRef        `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	Listener    *v1.ResourceRef        `protobuf:"bytes,5,opt,name=listener,proto3" json:"listener,omitempty"`
	VirtualHost []byte                 `protobuf:"bytes,6,opt,name=virtual_host,json=virtualHost,proto3" json:"virtual_host,omitempty"`
	// Types that are valid to be assigned to AccessLogConfig:
	//
	//	*GetVirtualServiceResponse_AccessLogConfigUid
	//	*GetVirtualServiceResponse_AccessLogConfigRaw
	AccessLogConfig       isGetVirtualServiceResponse_AccessLogConfig `protobuf_oneof:"access_log_config"`
	AdditionalHttpFilters []*v1.ResourceRef                           `protobuf:"bytes,9,rep,name=additional_http_filters,json=additionalHttpFilters,proto3" json:"additional_http_filters,omitempty"`
	AdditionalRoutes      []*v1.ResourceRef                           `protobuf:"bytes,10,rep,name=additional_routes,json=additionalRoutes,proto3" json:"additional_routes,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetVirtualServiceResponse) Reset() {
	*x = GetVirtualServiceResponse{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVirtualServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVirtualServiceResponse) ProtoMessage() {}

func (x *GetVirtualServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVirtualServiceResponse.ProtoReflect.Descriptor instead.
func (*GetVirtualServiceResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetVirtualServiceResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetVirtualServiceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVirtualServiceResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetVirtualServiceResponse) GetTemplate() *v1.ResourceRef {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetListener() *v1.ResourceRef {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetVirtualHost() []byte {
	if x != nil {
		return x.VirtualHost
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetAccessLogConfig() isGetVirtualServiceResponse_AccessLogConfig {
	if x != nil {
		return x.AccessLogConfig
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetAccessLogConfigUid() *v1.ResourceRef {
	if x != nil {
		if x, ok := x.AccessLogConfig.(*GetVirtualServiceResponse_AccessLogConfigUid); ok {
			return x.AccessLogConfigUid
		}
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetAccessLogConfigRaw() []byte {
	if x != nil {
		if x, ok := x.AccessLogConfig.(*GetVirtualServiceResponse_AccessLogConfigRaw); ok {
			return x.AccessLogConfigRaw
		}
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetAdditionalHttpFilters() []*v1.ResourceRef {
	if x != nil {
		return x.AdditionalHttpFilters
	}
	return nil
}

func (x *GetVirtualServiceResponse) GetAdditionalRoutes() []*v1.ResourceRef {
	if x != nil {
		return x.AdditionalRoutes
	}
	return nil
}

type isGetVirtualServiceResponse_AccessLogConfig interface {
	isGetVirtualServiceResponse_AccessLogConfig()
}

type GetVirtualServiceResponse_AccessLogConfigUid struct {
	AccessLogConfigUid *v1.ResourceRef `protobuf:"bytes,7,opt,name=access_log_config_uid,json=accessLogConfigUid,proto3,oneof"`
}

type GetVirtualServiceResponse_AccessLogConfigRaw struct {
	AccessLogConfigRaw []byte `protobuf:"bytes,8,opt,name=access_log_config_raw,json=accessLogConfigRaw,proto3,oneof"`
}

func (*GetVirtualServiceResponse_AccessLogConfigUid) isGetVirtualServiceResponse_AccessLogConfig() {}

func (*GetVirtualServiceResponse_AccessLogConfigRaw) isGetVirtualServiceResponse_AccessLogConfig() {}

type ListVirtualServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualServiceRequest) Reset() {
	*x = ListVirtualServiceRequest{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualServiceRequest) ProtoMessage() {}

func (x *ListVirtualServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualServiceRequest.ProtoReflect.Descriptor instead.
func (*ListVirtualServiceRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{8}
}

type VirtualServiceListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NodeIds       []string               `protobuf:"bytes,3,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	ProjectId     string                 `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualServiceListItem) Reset() {
	*x = VirtualServiceListItem{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualServiceListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualServiceListItem) ProtoMessage() {}

func (x *VirtualServiceListItem) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualServiceListItem.ProtoReflect.Descriptor instead.
func (*VirtualServiceListItem) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{9}
}

func (x *VirtualServiceListItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *VirtualServiceListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualServiceListItem) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *VirtualServiceListItem) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListVirtualServiceResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Items         []*VirtualServiceListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualServiceResponse) Reset() {
	*x = ListVirtualServiceResponse{}
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualServiceResponse) ProtoMessage() {}

func (x *ListVirtualServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_v1_virtual_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualServiceResponse.ProtoReflect.Descriptor instead.
func (*ListVirtualServiceResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_v1_virtual_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListVirtualServiceResponse) GetItems() []*VirtualServiceListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_virtual_service_v1_virtual_service_proto protoreflect.FileDescriptor

var file_virtual_service_v1_virtual_service_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x03, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55,
	0x69, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x30, 0x0a, 0x1c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xa3, 0x03, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x55,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x69, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x69, 0x64, 0x73, 0x42, 0x13, 0x0a,
	0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x97, 0x04, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x15,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x12, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x61,
	0x77, 0x12, 0x4e, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x15, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48, 0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x43, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1b, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x16, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x32, 0xf4, 0x04, 0x0a, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x79, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x2f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x2e, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xed, 0x01, 0x0a, 0x16, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x61, 0x73, 0x6f, 0x70, 0x73, 0x2f,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2d, 0x78, 0x64, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x11, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x11, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_virtual_service_v1_virtual_service_proto_rawDescOnce sync.Once
	file_virtual_service_v1_virtual_service_proto_rawDescData []byte
)

func file_virtual_service_v1_virtual_service_proto_rawDescGZIP() []byte {
	file_virtual_service_v1_virtual_service_proto_rawDescOnce.Do(func() {
		file_virtual_service_v1_virtual_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_virtual_service_v1_virtual_service_proto_rawDesc), len(file_virtual_service_v1_virtual_service_proto_rawDesc)))
	})
	return file_virtual_service_v1_virtual_service_proto_rawDescData
}

var file_virtual_service_v1_virtual_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_virtual_service_v1_virtual_service_proto_goTypes = []any{
	(*CreateVirtualServiceRequest)(nil),  // 0: virtual_service.v1.CreateVirtualServiceRequest
	(*CreateVirtualServiceResponse)(nil), // 1: virtual_service.v1.CreateVirtualServiceResponse
	(*UpdateVirtualServiceRequest)(nil),  // 2: virtual_service.v1.UpdateVirtualServiceRequest
	(*UpdateVirtualServiceResponse)(nil), // 3: virtual_service.v1.UpdateVirtualServiceResponse
	(*DeleteVirtualServiceRequest)(nil),  // 4: virtual_service.v1.DeleteVirtualServiceRequest
	(*DeleteVirtualServiceResponse)(nil), // 5: virtual_service.v1.DeleteVirtualServiceResponse
	(*GetVirtualServiceRequest)(nil),     // 6: virtual_service.v1.GetVirtualServiceRequest
	(*GetVirtualServiceResponse)(nil),    // 7: virtual_service.v1.GetVirtualServiceResponse
	(*ListVirtualServiceRequest)(nil),    // 8: virtual_service.v1.ListVirtualServiceRequest
	(*VirtualServiceListItem)(nil),       // 9: virtual_service.v1.VirtualServiceListItem
	(*ListVirtualServiceResponse)(nil),   // 10: virtual_service.v1.ListVirtualServiceResponse
	(*v1.ResourceRef)(nil),               // 11: common.v1.ResourceRef
}
var file_virtual_service_v1_virtual_service_proto_depIdxs = []int32{
	11, // 0: virtual_service.v1.GetVirtualServiceResponse.template:type_name -> common.v1.ResourceRef
	11, // 1: virtual_service.v1.GetVirtualServiceResponse.listener:type_name -> common.v1.ResourceRef
	11, // 2: virtual_service.v1.GetVirtualServiceResponse.access_log_config_uid:type_name -> common.v1.ResourceRef
	11, // 3: virtual_service.v1.GetVirtualServiceResponse.additional_http_filters:type_name -> common.v1.ResourceRef
	11, // 4: virtual_service.v1.GetVirtualServiceResponse.additional_routes:type_name -> common.v1.ResourceRef
	9,  // 5: virtual_service.v1.ListVirtualServiceResponse.items:type_name -> virtual_service.v1.VirtualServiceListItem
	0,  // 6: virtual_service.v1.VirtualServiceStoreService.CreateVirtualService:input_type -> virtual_service.v1.CreateVirtualServiceRequest
	2,  // 7: virtual_service.v1.VirtualServiceStoreService.UpdateVirtualService:input_type -> virtual_service.v1.UpdateVirtualServiceRequest
	4,  // 8: virtual_service.v1.VirtualServiceStoreService.DeleteVirtualService:input_type -> virtual_service.v1.DeleteVirtualServiceRequest
	6,  // 9: virtual_service.v1.VirtualServiceStoreService.GetVirtualService:input_type -> virtual_service.v1.GetVirtualServiceRequest
	8,  // 10: virtual_service.v1.VirtualServiceStoreService.ListVirtualService:input_type -> virtual_service.v1.ListVirtualServiceRequest
	1,  // 11: virtual_service.v1.VirtualServiceStoreService.CreateVirtualService:output_type -> virtual_service.v1.CreateVirtualServiceResponse
	3,  // 12: virtual_service.v1.VirtualServiceStoreService.UpdateVirtualService:output_type -> virtual_service.v1.UpdateVirtualServiceResponse
	5,  // 13: virtual_service.v1.VirtualServiceStoreService.DeleteVirtualService:output_type -> virtual_service.v1.DeleteVirtualServiceResponse
	7,  // 14: virtual_service.v1.VirtualServiceStoreService.GetVirtualService:output_type -> virtual_service.v1.GetVirtualServiceResponse
	10, // 15: virtual_service.v1.VirtualServiceStoreService.ListVirtualService:output_type -> virtual_service.v1.ListVirtualServiceResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_virtual_service_v1_virtual_service_proto_init() }
func file_virtual_service_v1_virtual_service_proto_init() {
	if File_virtual_service_v1_virtual_service_proto != nil {
		return
	}
	file_virtual_service_v1_virtual_service_proto_msgTypes[0].OneofWrappers = []any{
		(*CreateVirtualServiceRequest_AccessLogConfigUid)(nil),
	}
	file_virtual_service_v1_virtual_service_proto_msgTypes[2].OneofWrappers = []any{
		(*UpdateVirtualServiceRequest_AccessLogConfigUid)(nil),
	}
	file_virtual_service_v1_virtual_service_proto_msgTypes[7].OneofWrappers = []any{
		(*GetVirtualServiceResponse_AccessLogConfigUid)(nil),
		(*GetVirtualServiceResponse_AccessLogConfigRaw)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_virtual_service_v1_virtual_service_proto_rawDesc), len(file_virtual_service_v1_virtual_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_virtual_service_v1_virtual_service_proto_goTypes,
		DependencyIndexes: file_virtual_service_v1_virtual_service_proto_depIdxs,
		MessageInfos:      file_virtual_service_v1_virtual_service_proto_msgTypes,
	}.Build()
	File_virtual_service_v1_virtual_service_proto = out.File
	file_virtual_service_v1_virtual_service_proto_goTypes = nil
	file_virtual_service_v1_virtual_service_proto_depIdxs = nil
}
