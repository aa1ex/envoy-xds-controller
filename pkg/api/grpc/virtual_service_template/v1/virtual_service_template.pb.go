// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: virtual_service_template/v1/virtual_service_template.proto

package virtual_service_templatev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TemplateOptionModifier int32

const (
	TemplateOptionModifier_TEMPLATE_OPTION_MODIFIER_UNSPECIFIED TemplateOptionModifier = 0
	TemplateOptionModifier_TEMPLATE_OPTION_MODIFIER_MERGE       TemplateOptionModifier = 1
	TemplateOptionModifier_TEMPLATE_OPTION_MODIFIER_REPLACE     TemplateOptionModifier = 2
	TemplateOptionModifier_TEMPLATE_OPTION_MODIFIER_DELETE      TemplateOptionModifier = 3
)

// Enum value maps for TemplateOptionModifier.
var (
	TemplateOptionModifier_name = map[int32]string{
		0: "TEMPLATE_OPTION_MODIFIER_UNSPECIFIED",
		1: "TEMPLATE_OPTION_MODIFIER_MERGE",
		2: "TEMPLATE_OPTION_MODIFIER_REPLACE",
		3: "TEMPLATE_OPTION_MODIFIER_DELETE",
	}
	TemplateOptionModifier_value = map[string]int32{
		"TEMPLATE_OPTION_MODIFIER_UNSPECIFIED": 0,
		"TEMPLATE_OPTION_MODIFIER_MERGE":       1,
		"TEMPLATE_OPTION_MODIFIER_REPLACE":     2,
		"TEMPLATE_OPTION_MODIFIER_DELETE":      3,
	}
)

func (x TemplateOptionModifier) Enum() *TemplateOptionModifier {
	p := new(TemplateOptionModifier)
	*p = x
	return p
}

func (x TemplateOptionModifier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemplateOptionModifier) Descriptor() protoreflect.EnumDescriptor {
	return file_virtual_service_template_v1_virtual_service_template_proto_enumTypes[0].Descriptor()
}

func (TemplateOptionModifier) Type() protoreflect.EnumType {
	return &file_virtual_service_template_v1_virtual_service_template_proto_enumTypes[0]
}

func (x TemplateOptionModifier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemplateOptionModifier.Descriptor instead.
func (TemplateOptionModifier) EnumDescriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{0}
}

type TemplateOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Modifier      TemplateOptionModifier `protobuf:"varint,2,opt,name=modifier,proto3,enum=virtual_service_template.v1.TemplateOptionModifier" json:"modifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateOption) Reset() {
	*x = TemplateOption{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateOption) ProtoMessage() {}

func (x *TemplateOption) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateOption.ProtoReflect.Descriptor instead.
func (*TemplateOption) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateOption) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *TemplateOption) GetModifier() TemplateOptionModifier {
	if x != nil {
		return x.Modifier
	}
	return TemplateOptionModifier_TEMPLATE_OPTION_MODIFIER_UNSPECIFIED
}

type ListVirtualServiceTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualServiceTemplateRequest) Reset() {
	*x = ListVirtualServiceTemplateRequest{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualServiceTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualServiceTemplateRequest) ProtoMessage() {}

func (x *ListVirtualServiceTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualServiceTemplateRequest.ProtoReflect.Descriptor instead.
func (*ListVirtualServiceTemplateRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{1}
}

type VirtualServiceTemplateListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualServiceTemplateListItem) Reset() {
	*x = VirtualServiceTemplateListItem{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualServiceTemplateListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualServiceTemplateListItem) ProtoMessage() {}

func (x *VirtualServiceTemplateListItem) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualServiceTemplateListItem.ProtoReflect.Descriptor instead.
func (*VirtualServiceTemplateListItem) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{2}
}

func (x *VirtualServiceTemplateListItem) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *VirtualServiceTemplateListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListVirtualServiceTemplateResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Items         []*VirtualServiceTemplateListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVirtualServiceTemplateResponse) Reset() {
	*x = ListVirtualServiceTemplateResponse{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVirtualServiceTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVirtualServiceTemplateResponse) ProtoMessage() {}

func (x *ListVirtualServiceTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVirtualServiceTemplateResponse.ProtoReflect.Descriptor instead.
func (*ListVirtualServiceTemplateResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{3}
}

func (x *ListVirtualServiceTemplateResponse) GetItems() []*VirtualServiceTemplateListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type FillTemplateRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TemplateUid string                 `protobuf:"bytes,1,opt,name=template_uid,json=templateUid,proto3" json:"template_uid,omitempty"`
	ListenerUid string                 `protobuf:"bytes,2,opt,name=listener_uid,json=listenerUid,proto3" json:"listener_uid,omitempty"`
	VirtualHost []byte                 `protobuf:"bytes,3,opt,name=virtual_host,json=virtualHost,proto3" json:"virtual_host,omitempty"`
	// Types that are valid to be assigned to AccessLogConfig:
	//
	//	*FillTemplateRequest_AccessLogConfigUid
	AccessLogConfig          isFillTemplateRequest_AccessLogConfig `protobuf_oneof:"access_log_config"`
	AdditionalHttpFilterUids []string                              `protobuf:"bytes,5,rep,name=additional_http_filter_uids,json=additionalHttpFilterUids,proto3" json:"additional_http_filter_uids,omitempty"`
	AdditionalRouteUids      []string                              `protobuf:"bytes,6,rep,name=additional_route_uids,json=additionalRouteUids,proto3" json:"additional_route_uids,omitempty"`
	UseRemoteAddress         *bool                                 `protobuf:"varint,7,opt,name=use_remote_address,json=useRemoteAddress,proto3,oneof" json:"use_remote_address,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *FillTemplateRequest) Reset() {
	*x = FillTemplateRequest{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillTemplateRequest) ProtoMessage() {}

func (x *FillTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillTemplateRequest.ProtoReflect.Descriptor instead.
func (*FillTemplateRequest) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{4}
}

func (x *FillTemplateRequest) GetTemplateUid() string {
	if x != nil {
		return x.TemplateUid
	}
	return ""
}

func (x *FillTemplateRequest) GetListenerUid() string {
	if x != nil {
		return x.ListenerUid
	}
	return ""
}

func (x *FillTemplateRequest) GetVirtualHost() []byte {
	if x != nil {
		return x.VirtualHost
	}
	return nil
}

func (x *FillTemplateRequest) GetAccessLogConfig() isFillTemplateRequest_AccessLogConfig {
	if x != nil {
		return x.AccessLogConfig
	}
	return nil
}

func (x *FillTemplateRequest) GetAccessLogConfigUid() string {
	if x != nil {
		if x, ok := x.AccessLogConfig.(*FillTemplateRequest_AccessLogConfigUid); ok {
			return x.AccessLogConfigUid
		}
	}
	return ""
}

func (x *FillTemplateRequest) GetAdditionalHttpFilterUids() []string {
	if x != nil {
		return x.AdditionalHttpFilterUids
	}
	return nil
}

func (x *FillTemplateRequest) GetAdditionalRouteUids() []string {
	if x != nil {
		return x.AdditionalRouteUids
	}
	return nil
}

func (x *FillTemplateRequest) GetUseRemoteAddress() bool {
	if x != nil && x.UseRemoteAddress != nil {
		return *x.UseRemoteAddress
	}
	return false
}

type isFillTemplateRequest_AccessLogConfig interface {
	isFillTemplateRequest_AccessLogConfig()
}

type FillTemplateRequest_AccessLogConfigUid struct {
	AccessLogConfigUid string `protobuf:"bytes,4,opt,name=access_log_config_uid,json=accessLogConfigUid,proto3,oneof"`
}

func (*FillTemplateRequest_AccessLogConfigUid) isFillTemplateRequest_AccessLogConfig() {}

type FillTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Raw           string                 `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FillTemplateResponse) Reset() {
	*x = FillTemplateResponse{}
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillTemplateResponse) ProtoMessage() {}

func (x *FillTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillTemplateResponse.ProtoReflect.Descriptor instead.
func (*FillTemplateResponse) Descriptor() ([]byte, []int) {
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP(), []int{5}
}

func (x *FillTemplateResponse) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

var File_virtual_service_template_v1_virtual_service_template_proto protoreflect.FileDescriptor

var file_virtual_service_template_v1_virtual_service_template_proto_rawDesc = string([]byte{
	0x0a, 0x3a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x77, 0x0a, 0x0e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0x23, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x1e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x77, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x13, 0x46, 0x69, 0x6c,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x64, 0x12, 0x3d,
	0x0a, 0x1b, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x18, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x48,
	0x74, 0x74, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x55, 0x69, 0x64, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x73, 0x12, 0x31, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x10, 0x75, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x28, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x2a, 0xb1, 0x01, 0x0a, 0x16, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x24, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45,
	0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x52, 0x47,
	0x45, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f,
	0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x45, 0x4d,
	0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44,
	0x49, 0x46, 0x49, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x32, 0xb9,
	0x02, 0x0a, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb0, 0x02, 0x0a, 0x1f, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x1b,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x61, 0x73, 0x6f, 0x70,
	0x73, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2d, 0x78, 0x64, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58,
	0xaa, 0x02, 0x19, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x19, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x25, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1a, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_virtual_service_template_v1_virtual_service_template_proto_rawDescOnce sync.Once
	file_virtual_service_template_v1_virtual_service_template_proto_rawDescData []byte
)

func file_virtual_service_template_v1_virtual_service_template_proto_rawDescGZIP() []byte {
	file_virtual_service_template_v1_virtual_service_template_proto_rawDescOnce.Do(func() {
		file_virtual_service_template_v1_virtual_service_template_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_virtual_service_template_v1_virtual_service_template_proto_rawDesc), len(file_virtual_service_template_v1_virtual_service_template_proto_rawDesc)))
	})
	return file_virtual_service_template_v1_virtual_service_template_proto_rawDescData
}

var file_virtual_service_template_v1_virtual_service_template_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_virtual_service_template_v1_virtual_service_template_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_virtual_service_template_v1_virtual_service_template_proto_goTypes = []any{
	(TemplateOptionModifier)(0),                // 0: virtual_service_template.v1.TemplateOptionModifier
	(*TemplateOption)(nil),                     // 1: virtual_service_template.v1.TemplateOption
	(*ListVirtualServiceTemplateRequest)(nil),  // 2: virtual_service_template.v1.ListVirtualServiceTemplateRequest
	(*VirtualServiceTemplateListItem)(nil),     // 3: virtual_service_template.v1.VirtualServiceTemplateListItem
	(*ListVirtualServiceTemplateResponse)(nil), // 4: virtual_service_template.v1.ListVirtualServiceTemplateResponse
	(*FillTemplateRequest)(nil),                // 5: virtual_service_template.v1.FillTemplateRequest
	(*FillTemplateResponse)(nil),               // 6: virtual_service_template.v1.FillTemplateResponse
}
var file_virtual_service_template_v1_virtual_service_template_proto_depIdxs = []int32{
	0, // 0: virtual_service_template.v1.TemplateOption.modifier:type_name -> virtual_service_template.v1.TemplateOptionModifier
	3, // 1: virtual_service_template.v1.ListVirtualServiceTemplateResponse.items:type_name -> virtual_service_template.v1.VirtualServiceTemplateListItem
	2, // 2: virtual_service_template.v1.VirtualServiceTemplateStoreService.ListVirtualServiceTemplate:input_type -> virtual_service_template.v1.ListVirtualServiceTemplateRequest
	5, // 3: virtual_service_template.v1.VirtualServiceTemplateStoreService.FillTemplate:input_type -> virtual_service_template.v1.FillTemplateRequest
	4, // 4: virtual_service_template.v1.VirtualServiceTemplateStoreService.ListVirtualServiceTemplate:output_type -> virtual_service_template.v1.ListVirtualServiceTemplateResponse
	6, // 5: virtual_service_template.v1.VirtualServiceTemplateStoreService.FillTemplate:output_type -> virtual_service_template.v1.FillTemplateResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_virtual_service_template_v1_virtual_service_template_proto_init() }
func file_virtual_service_template_v1_virtual_service_template_proto_init() {
	if File_virtual_service_template_v1_virtual_service_template_proto != nil {
		return
	}
	file_virtual_service_template_v1_virtual_service_template_proto_msgTypes[4].OneofWrappers = []any{
		(*FillTemplateRequest_AccessLogConfigUid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_virtual_service_template_v1_virtual_service_template_proto_rawDesc), len(file_virtual_service_template_v1_virtual_service_template_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_virtual_service_template_v1_virtual_service_template_proto_goTypes,
		DependencyIndexes: file_virtual_service_template_v1_virtual_service_template_proto_depIdxs,
		EnumInfos:         file_virtual_service_template_v1_virtual_service_template_proto_enumTypes,
		MessageInfos:      file_virtual_service_template_v1_virtual_service_template_proto_msgTypes,
	}.Build()
	File_virtual_service_template_v1_virtual_service_template_proto = out.File
	file_virtual_service_template_v1_virtual_service_template_proto_goTypes = nil
	file_virtual_service_template_v1_virtual_service_template_proto_depIdxs = nil
}
