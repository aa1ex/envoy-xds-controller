# Полный bootstrap Envoy-клиента, который получает конфигурацию по ADS
# через фронтовой шлюз xds-gateway. Уникальность клиента задаём через
# 'authority' (используется шлюзом для адресной маршрутизации).

node:
  id: "test"          # уникальный ID узла (произвольный)
  cluster: "default" # логическая группа (опционально)

dynamic_resources:
  # All-in-ADS: все xDS (LDS/CDS/RDS/EDS) через ADS
  ads_config:
    api_type: DELTA_GRPC
    transport_api_version: V3
    set_node_on_first_message_only: true
    grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
          authority: "test"
  lds_config:
    resource_api_version: V3
    ads: {}
  cds_config:
    resource_api_version: V3
    ads: {}
  # Если используете RDS/EDS, они тоже будут через ADS:
  # rds и eds можно не указывать: Envoy сам запросит их через ADS, когда понадобятся.

#static_resources:
#  clusters:
#    - name: xds_cluster
#      type: STRICT_DNS
#      connect_timeout: 1s
#      http2_protocol_options: {}            # gRPC/xDS требует HTTP/2
#      load_assignment:
#        cluster_name: xds_cluster
#        endpoints:
#          - lb_endpoints:
#              - endpoint:
#                  address:
#                    socket_address:
#                      address: "host.docker.internal"
#                      port_value: 18000
      # Если фронтовой шлюз слушает под TLS — включите upstream TLS:
#      transport_socket:
#        name: envoy.transport_sockets.tls
#        typed_config:
#          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
#          sni: "${XDS_GATEWAY_SNI:-xds-gateway.company}"
          # (опционально) доверенный корневой сертификат шлюза
          # common_tls_context:
          #   validation_context:
          #     trusted_ca:
          #       filename: /etc/ssl/certs/ca-certificates.crt

static_resources:
  clusters:
    - typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              connection_keepalive:
                interval: 30s
                timeout: 50s
      connect_timeout: 100s
      load_assignment:
        cluster_name: xds_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 10000
#                      port_value: 18000
      http2_protocol_options: {}
      dns_lookup_family: V4_ONLY
      name: xds_cluster
      type: LOGICAL_DNS

# Рекомендуется включить бесконечные таймауты для длительных xDS-стримов
# (иначе прокси может закрывать соединение по idle timeout)
#layered_runtime:
#  layers:
#    - name: static_layer
#      static_layer:
#        upstream:
#          # отключить таймауты на HTTP/2 стримах
#          http2:
#            stream_error_on_invalid_http_message: false

admin:
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 19000