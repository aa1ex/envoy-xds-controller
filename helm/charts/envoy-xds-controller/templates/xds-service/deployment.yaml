{{- if .Values.xdsService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}-xds-service
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  {{- with .Values.extraLabels }}
    {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  replicas: {{ default 1 .Values.xdsService.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: xds-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: xds-service
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.xdsService.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: xds-service
          image: {{ default "kaasops/xds-service" .Values.xdsService.image.repository }}:{{ default .Chart.AppVersion .Values.xdsService.image.tag }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.xdsService.image.pullPolicy }}
          args:
            - -development={{ .Values.development }}
            - -port
            - "{{ .Values.xdsService.ports.xds }}"
            - -http
            - ":{{ .Values.xdsService.ports.http }}"
            {{- if .Values.xdsService.enableAutoSync }}
            - -auto-sync
            - -sync-interval
            - "{{ .Values.xdsService.syncInterval }}"
            {{- else if .Values.enableRedisSync }}
            # Backward-compat: keep enabling auto-sync when global enableRedisSync is true
            - -auto-sync
            {{- end }}
            {{- if .Values.xdsService.extraArgs }}
            {{- toYaml .Values.xdsService.extraArgs | nindent 12 }}
            {{- end }}
          env:
            {{- if .Values.enableRedisSync }}
            - name: REDIS_ADDR
              value: {{ .Values.redis.addr | quote }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.password | quote }}
            - name: REDIS_DB
              value: "{{ .Values.redis.db }}"
            - name: XDS_REDIS_NS
              value: {{ .Values.redis.namespace | quote }}
            - name: XDS_REDIS_TIMEOUT_MS
              value: "{{ .Values.redis.timeoutMs }}"
            {{- end }}
            {{- if .Values.xdsService.extraEnv }}
            {{- range $k, $v := .Values.xdsService.extraEnv }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.xdsService.config }}
          envFrom:
            - configMapRef:
                name: {{ template "chart.fullname" . }}-xds-service-config
          {{- end }}
          ports:
            - name: grpc
              containerPort: {{ .Values.xdsService.ports.xds }}
              protocol: TCP
            - name: http
              containerPort: {{ .Values.xdsService.ports.http }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.xdsService.ports.http }}
            initialDelaySeconds: 3
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.xdsService.ports.http }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml (default .Values.resources .Values.xdsService.resources) | nindent 12 }}
{{- end }}
