name: Build and Push

# This workflow will run on master branch and on any pull requests targeting master
on:
  push:
    tags:
      - 'v*'
      - 'pre-v*'

jobs:
  build-and-push:
    name: Build and push ${{ matrix.image }} image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: main
            context: .
            dockerfile: ./Dockerfile
            suffix: ""
            build-args: true
          - image: ui
            context: ./ui
            dockerfile: ./ui/Dockerfile
            suffix: "-ui"
            build-args: false
          - image: init-cert
            context: .
            dockerfile: ./cmd/init-cert/Dockerfile
            suffix: "-init-cert"
            build-args: false
          - image: client
            context: .
            dockerfile: ./cmd/client/Dockerfile
            suffix: "-client"
            build-args: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag
        id: tag
        run: echo  "TAG=$(git describe --tags HEAD)" >> $GITHUB_OUTPUT

      - name: Get current date
        id: date
        run: echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.image }} image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            ${{ matrix.build-args == 'true' && format('VERSION={0}', steps.tag.outputs.TAG) || '' }}
            ${{ matrix.build-args == 'true' && format('COMMIT_HASH={0}', github.sha) || '' }}
            ${{ matrix.build-args == 'true' && format('BUILD_DATE={0}', steps.date.outputs.BUILD_DATE) || '' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}${{ matrix.suffix }}:${{ steps.tag.outputs.TAG }},${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}${{ matrix.suffix }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}${{ matrix.suffix }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}${{ matrix.suffix }}:buildcache,mode=max
          provenance: false